<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pond0x Jupiter Referral Swap</title>
  <script src="https://unpkg.com/@solana/web3.js@1.91.0/lib/index.iife.js"></script>
  <script src="https://unpkg.com/@jup-ag/core@4.0.0/dist/jupiter-core.iife.js"></script>
</head>
<body style="font-family: sans-serif; padding: 20px; background: #111; color: #eee;">
  <h2>Pond0x Jupiter Referral Swap</h2>

  <div>
    <label>From Token (Mint):</label><br>
    <input id="fromMint" size="60" value="So11111111111111111111111111111111111111112" />
  </div>
  <div style="margin-top:10px;">
    <label>To Token (Mint):</label><br>
    <input id="toMint" size="60" value="Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11L5CDhKuvFJQS" />
  </div>
  <div style="margin-top:10px;">
    <label>Amount (in smallest unit):</label><br>
    <input id="amount" size="20" value="1000000" />
  </div>

  <button id="swapButton" style="margin-top:20px; padding:10px 15px; font-weight:bold;">
    Connect & Swap via Jupiter
  </button>

  <pre id="output" style="margin-top:20px; background:#222; padding:10px;"></pre>

  <script type="module">
    import { Connection, PublicKey, VersionedTransaction } from "https://cdn.jsdelivr.net/npm/@solana/web3.js@1.91.0/lib/index.browser.esm.js";

    const REFERRAL_VAULT = new PublicKey("5LmFGjbae5iWejFVT8UiRLggh1me22nTetmere8SjwKy");
    const RPC_URL = "https://api.mainnet-beta.solana.com";
    const connection = new Connection(RPC_URL);

    async function getQuote(fromMint, toMint, amount) {
      const url = `https://quote-api.jup.ag/v6/quote?inputMint=${fromMint}&outputMint=${toMint}&amount=${amount}&slippageBps=50&platformFeeBps=50&referralAccount=${REFERRAL_VAULT.toBase58()}`;
      const res = await fetch(url);
      return await res.json();
    }

    async function executeSwap(quote) {
      const swapUrl = "https://quote-api.jup.ag/v6/swap";
      const res = await fetch(swapUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          quoteResponse: quote,
          userPublicKey: window.solana.publicKey.toBase58(),
          wrapAndUnwrapSol: true,
          dynamicComputeUnitLimit: true,
          referralAccount: REFERRAL_VAULT.toBase58(),
        }),
      });
      return await res.json();
    }

    document.getElementById("swapButton").onclick = async () => {
      const fromMint = document.getElementById("fromMint").value;
      const toMint = document.getElementById("toMint").value;
      const amount = document.getElementById("amount").value;
      const output = document.getElementById("output");

      if (!window.solana) {
        alert("Please install a Solana wallet like Phantom.");
        return;
      }
      await window.solana.connect();

      output.textContent = "Fetching quote...";
      const quote = await getQuote(fromMint, toMint, amount);
      output.textContent = JSON.stringify(quote, null, 2);

      const swapTx = await executeSwap(quote);
      output.textContent += "\n\nSwap Transaction Prepared:\n" + JSON.stringify(swapTx, null, 2);

      const swapTransactionBuf = Buffer.from(swapTx.swapTransaction, "base64");
      const transaction = VersionedTransaction.deserialize(swapTransactionBuf);
      await window.solana.signAndSendTransaction(transaction);

      output.textContent += "\n\nâœ… Swap submitted to the network!";
    };
  </script>
</body>
</html>